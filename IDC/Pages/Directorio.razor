@page "/directorio"
@inject HttpClient Http
@inject GlobalUtil globalUtil
@inject Microsoft.JSInterop.IJSRuntime JSRuntime

<Spinner />

<section class="row bg-light text-dark">
    <article class="col">
        <h1 itemprop="name" class="text-center tituloHdos">Directorio</h1>
    </article>
</section>

<div class="d-flex justify-content-center">
    <PaginacionSecciones PageSize="PageSize" PageIndex="PageIndex" PageChanged="PageChanged" TotalPages="TotalPages" />
</div>

<section class="container bg-white pt-2">
    <section class="row row-cols-1 row-cols-md-4 g-4">

        @if (listaDirectorio != null)
        {
            foreach (var seccion in listaDirectorio)
            {
                <section class="col hvr-shrink">
                    <section class="card hvr-shrink cardTieneContenido">
                        <NavLink title="Ver sección" class="text-decoration-none" href="@($"detalleDirectorio/{globalUtil.GenerarSlug(seccion.IdDirectorio, seccion?.Titulo)}")">

                            <input type="hidden" id="id" name="id" value="seccion.GenerateSlug" />

                            <header>
                                @if (!string.IsNullOrWhiteSpace(seccion.UrlImagen))
                                {
                                    <img alt="@seccion.Titulo" style="max-width: 200px !important; margin: 0 auto;" src="@($"{globalUtil.UrlIDCAnterior}/{seccion.UrlImagen}")" class="card-img-top d-block">
                                }
                            </header>

                            <footer class="card-footer py-0 px-0 d-grid">
                                <button style="background-color: #5b6d7f !important; border-radius: 0px !important;" class="btn btn-sm btn-dark btn-block">@seccion.Titulo</button>
                            </footer>
                        </NavLink>
                    </section>
                </section>
            }
        }
    </section>

</section>

<div class="d-flex mt-2 justify-content-center">
    <PaginacionSecciones PageSize="PageSize" PageIndex="PageIndex" PageChanged="PageChanged" TotalPages="TotalPages" />
</div>

@code {
    private DirectorioDTO[]? listaDirectorio;
    private int TotalPages { get; set; }
    private int PageSize { get; set; } = 12;
    private int PageIndex { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        listaDirectorio = await Http.GetFromJsonAsync<DirectorioDTO[]>($"{globalUtil.UrlApi}/api/directorio/pag/{PageIndex}/{PageSize}");
        if (listaDirectorio != null)
        {
            TotalPages = listaDirectorio[0].TotalPaginas;
        }
    }

    public class DirectorioDTO
    {
        public int IdDirectorio { get; set; }
        public int IdCongregacion { get; set; }
        public string? Titulo { get; set; }
        public string? Descripcion { get; set; }
        public string? UrlImagen { get; set; }
        public int TotalPaginas { get; set; }
        public string? UrlImagenDirectorio { get; set; }
    }

    private async Task PageChanged(int page)
    {
        PageIndex = page;
        await LoadData();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(2000);
            await JSRuntime.InvokeVoidAsync("hideSpinnerOP");
        }
    }
}
